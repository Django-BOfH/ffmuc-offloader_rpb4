--- # Start der YML Datei 
# Ansible Playbook für (statische) Konfiguration eines Offloader auf Basis eines Raspberry PI 4B
# Aufruf via $ ansible-playbook ~/Freifunk/ffmuc-offloader_rpb4/wireguard-offloader.yml für alle Hosts der Gruppe
# bzw. $ ansible-playbook ~/Freifunk/ffmuc-offloader_rpb4/wireguard-offloader.yml --limit rpb4-ol-a für nur einen
# Host mit dem Namen rpb4 aus derm inventory

- name:         raspi_offloader.yml     # Name des Playbooks
  hosts:        ffmuc                   # Hostgruppe für die das Playbook gelten soll 
  become:       yes                     # Rechteerweiterung am Zielsystem via sudo/su
  become_user:  root                    # Nutzer für die Ansible Aufgaben auf dem Remote-System

  roles:
    - basic                             # Basiskonfiguration des Hosts (Host-/Username anpassen und System Updaten)
    - batman                            # Installation und Konfiguration der BATMAN Kernel-Module
    - wireguard                         # Installation und Konfiguration des wireguard Tunnels
    - vxlan                             # Konfiguration von VXLAN für wireguard-Tunnel-Verbindung in Richtung Gateway
    - ext-respondd                      # Installation und Konfiguration des ext-respondd (Statistiken für https://map.ffmuc.net)
    - role: hostapd                     # Installation und Konfiguration des hostap Treibers für den WiFi-Support
      when: ( raspberry_wifi == "ja" )  #
    - client-mesh                       # Grundkonfiguration von Client und/oder Meshing (V)LANs
    - final                             # Reboot nach Abschluss der Konfiguration unseres Offloaders  
... # YML Ende
